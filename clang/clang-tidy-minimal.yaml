Checks: >
  clang-diagnostic-*,clang-analyzer-*,*,
  -abseil*,
  -fuchsia*,
  -android*,
  -altera*
  -zircon*,
  -hicpp*,
  -objc*,
  -llvmlibc*,
  -llvm*
  -google-readability-braces-around-statements,
  -google-readability-todo,
  -google-runtime-references,
  -readability-uppercase-literal-suffix,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
  -cppcoreguidelines-pro-type-vararg,
  -modernize-use-trailing-return-type,
  -modernize-use-nodiscard,
  -cppcoreguidelines-avoid-magic-numbers,
  -readability-magic-numbers,
  -readability-braces-around-statements,
  -cppcoreguidelines-non-private-member-variables-in-class
WarningsAsErrors: ''
HeaderFilterRegex: ''
AnalyzeTemporaryDtors: false
FormatStyle: '{BasedOnStyle: Google, AccessModifierOffset: -2, AlignAfterOpenBracket: Align, AlignEscapedNewlinesLeft: false, AlignOperands: true, AlignTrailingComments: true, AllowAllParametersOfDeclarationOnNextLine: false, AllowShortFunctionsOnASingleLine: None, AllowShortIfStatementsOnASingleLine: false, AllowShortLoopsOnASingleLine: false, AlwaysBreakBeforeMultilineStrings: false, AlwaysBreakTemplateDeclarations: true, BinPackArguments: false, BinPackParameters: false, BreakBeforeBinaryOperators: false, BreakBeforeBraces: Allman, BreakBeforeTernaryOperators: false, BreakConstructorInitializersBeforeComma: true, ColumnLimit: 120, ConstructorInitializerAllOnOneLineOrOnePerLine: true, ConstructorInitializerIndentWidth: 2, ContinuationIndentWidth: 4, Cpp11BracedListStyle: false, DerivePointerAlignment: false, ExperimentalAutoDetectBinPacking: false, IndentCaseLabels: true, IndentFunctionDeclarationAfterType: false, IndentWidth: 2, MaxEmptyLinesToKeep: 1, NamespaceIndentation: None, ObjCSpaceBeforeProtocolList: true, PenaltyBreakBeforeFirstCallParameter: 19, PenaltyBreakComment: 60, PenaltyBreakFirstLessLess: 1000, PenaltyBreakString: 1, PenaltyExcessCharacter: 100, PenaltyReturnTypeOnItsOwnLine: 90, PointerAlignment: Left, PointerBindsToType: false, SortIncludes: false, SpaceAfterControlStatementKeyword: true, SpaceBeforeAssignmentOperators: true, SpaceInEmptyParentheses: false, SpacesBeforeTrailingComments: 2, SpacesInAngles: false, SpacesInCStyleCastParentheses: false, SpacesInParentheses: false, Standard: Cpp11, TabWidth: 2, UseTab: Never}'
CheckOptions:
  - key:             bugprone-assert-side-effect.AssertMacros
    value:           'assert;ROS_ASSERT'
  - key:             cppcoreguidelines-avoid-magic-numbers.IgnoredFloatingPointValues
    value:           '0.5;1.0;100.0;'
  - key:             cppcoreguidelines-avoid-magic-numbers.IgnoredIntegerValues
    value:           '1;2;3;4;'
  - key:             cppcoreguidelines-macro-usage.AllowedRegexp
    value:           '^DEBUG_*|IPA_LOGGING_CLASS_NAME'
  - key:             cppcoreguidelines-macro-usage.CheckCapsOnly
    value:           '0'
# This allows 2 line statements, but disallows longer blocks (like if/else trees)
  - key:             readability-braces-around-statements.ShortStatementLines
    value:           '2'
  - key:             readability-magic-numbers.IgnoredFloatingPointValues
    value:           '0.5;1.0;100.0;'
  - key:             readability-magic-numbers.IgnoredIntegerValues
    value:           '1;2;3;4;'
  - { key: readability-identifier-naming.NamespaceCase,       value: lower_case }
  - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,        value: camelBack}
  - { key: readability-identifier-naming.VariableCase,        value: lower_case }
  - { key: readability-identifier-naming.ClassMemberSuffix, value: _         }
  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalVariablePrefix,  value: g_ }
  - { key: readability-function-cognitive-complexity.IgnoreMacros,  value: true }
  - { key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic, value: true }
